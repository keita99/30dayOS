     1                                  ;asminthandler27などまだ
     2                                  
     3                                  ; naskfunc
     4                                  
     5                                      GLOBAL  io_hlt, io_cli, io_sti, io_stihlt   ; 関数宣言
     6                                      GLOBAL  io_in8, io_in16, io_in32
     7                                      GLOBAL  io_out8, io_out16, io_out32
     8                                      GLOBAL  io_load_eflags, io_store_eflags
     9                                      GLOBAL  load_gdtr, load_idtr
    10                                      GLOBAL  asm_inthandler21, asm_inthandler27, asm_inthandler2c
    11                                      EXTERN  inthandler21, inthandler27, inthandler2c
    12                                      GLOBAL  load_cr0, store_cr0
    13                                      GLOBAL  memtest_sub
    14                                  
    15                                  [SECTION .text]
    16                                  
    17                                  io_hlt:    ; void io_hlt(void)
    18 00000000 F4                          HLT
    19 00000001 C3                          RET
    20                                  
    21                                  io_cli:     ; void io_cli(void)
    22 00000002 FA                          CLI
    23 00000003 C3                          RET
    24                                  
    25                                  io_sti:     ; void io_sti(void)
    26 00000004 FB                          STI
    27 00000005 C3                          RET
    28                                  
    29                                  io_stihlt:  ; void io_stihlt(void)
    30 00000006 FB                          STI
    31 00000007 F4                          HLT
    32 00000008 C3                          RET
    33                                  
    34                                  io_in8:     ;int io_in8(int port)
    35 00000009 8B542404                    MOV     EDX,[ESP+4]     ; port
    36 0000000D B800000000                  MOV     EAX,0
    37 00000012 EC                          IN      AL,DX
    38 00000013 C3                          RET
    39                                  
    40                                  io_in16:     ;int io_in16(int port)
    41 00000014 8B542404                    MOV     EDX,[ESP+4]     ; port
    42 00000018 B800000000                  MOV     EAX,0
    43 0000001D 66ED                        IN      AX,DX
    44 0000001F C3                          RET
    45                                  
    46                                  io_in32:     ;int io_in32(int port)
    47 00000020 8B542404                    MOV     EDX,[ESP+4]     ; port
    48 00000024 ED                          IN      EAX,DX
    49 00000025 C3                          RET
    50                                  
    51                                  io_out8:     ;int io_out8(int port, int data)
    52 00000026 8B542404                    MOV     EDX,[ESP+4]     ; port
    53 0000002A 8A442408                    MOV     AL,[ESP+8]      ; data
    54 0000002E EE                          OUT     DX,AL
    55 0000002F C3                          RET
    56                                  
    57                                  io_out16:     ;int io_out16(int port, int data)
    58 00000030 8B542404                    MOV     EDX,[ESP+4]     ; port
    59 00000034 8B442408                    MOV     EAX,[ESP+8]      ; data
    60 00000038 66EF                        OUT     DX,AX
    61 0000003A C3                          RET
    62                                  
    63                                  io_out32:     ;int io_out32(int port, int data)
    64 0000003B 8B542404                    MOV     EDX,[ESP+4]     ; port
    65 0000003F 8B442408                    MOV     EAX,[ESP+8]      ; data
    66 00000043 EF                          OUT     DX,EAX
    67 00000044 C3                          RET
    68                                  
    69                                  io_load_eflags: ; int io_load_eflags(void)
    70 00000045 9C                          PUSHFD
    71 00000046 58                          POP     EAX
    72 00000047 C3                          RET
    73                                  
    74                                  io_store_eflags: ; int io_store_eflags(int eflags)
    75 00000048 8B442404                    MOV     EAX,[ESP+4]
    76 0000004C 50                          PUSH    EAX
    77 0000004D 9D                          POPFD
    78 0000004E C3                          RET
    79                                  
    80                                  load_gdtr:  ; void load_gdtr(int limit, int addr);
    81 0000004F 668B442404                  MOV     AX,[ESP+4]
    82 00000054 6689442406                  MOV     [ESP+6],AX
    83 00000059 0F01542406                  LGDT    [ESP+6]
    84 0000005E C3                          RET
    85                                  
    86                                  load_idtr:  ; void load_idtr(int limit, int addr);
    87 0000005F 668B442404                  MOV     AX,[ESP+4]
    88 00000064 6689442406                  MOV     [ESP+6],AX
    89 00000069 0F015C2406                  LIDT    [ESP+6]
    90 0000006E C3                          RET
    91                                  
    92                                  asm_inthandler21:
    93 0000006F 06                          PUSH    ES
    94 00000070 1E                          PUSH    DS
    95 00000071 60                          PUSHAD
    96 00000072 89E0                        MOV     EAX,ESP
    97 00000074 50                          PUSH    EAX
    98 00000075 668CD0                      MOV     AX,SS
    99 00000078 8ED8                        MOV     DS,AX
   100 0000007A 8EC0                        MOV     ES,AX
   101 0000007C E8(00000000)                CALL    inthandler21
   102 00000081 58                          POP     EAX
   103 00000082 61                          POPAD
   104 00000083 1F                          POP     DS
   105 00000084 07                          POP     ES
   106 00000085 CF                          IRETD
   107                                  
   108                                  asm_inthandler27:
   109 00000086 06                          PUSH    ES
   110 00000087 1E                          PUSH    DS
   111 00000088 60                          PUSHAD
   112 00000089 89E0                        MOV     EAX,ESP
   113 0000008B 50                          PUSH    EAX
   114 0000008C 668CD0                      MOV     AX,SS
   115 0000008F 8ED8                        MOV     DS,AX
   116 00000091 8EC0                        MOV     ES,AX
   117 00000093 E8(00000000)                CALL    inthandler27
   118 00000098 58                          POP     EAX
   119 00000099 61                          POPAD
   120 0000009A 1F                          POP     DS
   121 0000009B 07                          POP     ES
   122 0000009C CF                          IRETD    
   123                                      
   124                                  asm_inthandler2c:
   125 0000009D 06                          PUSH    ES
   126 0000009E 1E                          PUSH    DS
   127 0000009F 60                          PUSHAD
   128 000000A0 89E0                        MOV     EAX,ESP
   129 000000A2 50                          PUSH    EAX
   130 000000A3 668CD0                      MOV     AX,SS
   131 000000A6 8ED8                        MOV     DS,AX
   132 000000A8 8EC0                        MOV     ES,AX
   133 000000AA E8(00000000)                CALL    inthandler2c
   134 000000AF 58                          POP     EAX
   135 000000B0 61                          POPAD
   136 000000B1 1F                          POP     DS
   137 000000B2 07                          POP     ES
   138 000000B3 CF                          IRETD    
   139                                  
   140                                  load_cr0:   ;int load_cr0(void);
   141 000000B4 0F20C0                      MOV     EAX,CR0
   142 000000B7 C3                          RET
   143                                  
   144                                  store_cr0:   ;void store(int cr0);
   145 000000B8 8B442404                    MOV     EAX,[ESP+4]
   146 000000BC 0F22C0                      MOV     CR0,EAX
   147 000000BF C3                          RET
   148                                  
   149                                  memtest_sub: ;unsigned int memtest_sub(unsigned int start, unsigned int end);
   150 000000C0 57                          PUSH    EDI
   151 000000C1 56                          PUSH    ESI
   152 000000C2 53                          PUSH    EBX
   153 000000C3 BE55AA55AA                  MOV     ESI,0xaa55aa55
   154 000000C8 BFAA55AA55                  MOV     EDI,0x55aa55aa
   155 000000CD 8B442410                    MOV     EAX,[ESP+12+4]
   156                                  mts_loop:
   157 000000D1 89C3                        MOV     EBX,EAX
   158 000000D3 81C3FC0F0000                ADD     EBX,0xffc
   159 000000D9 8B13                        MOV     EDX,[EBX]
   160 000000DB 8933                        MOV     [EBX],ESI
   161 000000DD 8333FF                      XOR     DWORD [EBX],0xffffffff
   162 000000E0 3B3B                        CMP     EDI,[EBX]
   163 000000E2 7511                        JNE     mts_fin
   164 000000E4 8913                        MOV     [EBX],EDX
   165 000000E6 0500100000                  ADD     EAX,0x1000
   166 000000EB 3B442414                    CMP     EAX,[ESP+12+8]
   167 000000EF 76E0                        JBE     mts_loop
   168 000000F1 5B                          POP     EBX
   169 000000F2 5E                          POP     ESI
   170 000000F3 5F                          POP     EDI
   171 000000F4 C3                          RET
   172                                  mts_fin:
   173 000000F5 8913                        MOV     [EBX],EDX
   174 000000F7 5B                          POP     EBX
   175 000000F8 5E                          POP     ESI
   176 000000F9 5F                          POP     EDI
   177 000000FA C3                          RET
