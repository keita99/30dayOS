     1                                  ;asminthandler27などまだ
     2                                  
     3                                  ; naskfunc
     4                                  
     5                                      GLOBAL  io_hlt, io_cli, io_sti, io_stihlt   ; 関数宣言
     6                                      GLOBAL  io_in8, io_in16, io_in32
     7                                      GLOBAL  io_out8, io_out16, io_out32
     8                                      GLOBAL  io_load_eflags, io_store_eflags
     9                                      GLOBAL  load_gdtr, load_idtr
    10                                      GLOBAL  asm_inthandler21, asm_inthandler27, asm_inthandler2c, asm_inthandler20
    11                                      EXTERN  inthandler21, inthandler27, inthandler2c, inthandler20
    12                                      GLOBAL  load_cr0, store_cr0
    13                                      GLOBAL  load_tr, taskswitch4
    14                                      GLOBAL  memtest_sub
    15                                  
    16                                  [SECTION .text]
    17                                  
    18                                  io_hlt:    ; void io_hlt(void)
    19 00000000 F4                          HLT
    20 00000001 C3                          RET
    21                                  
    22                                  io_cli:     ; void io_cli(void)
    23 00000002 FA                          CLI
    24 00000003 C3                          RET
    25                                  
    26                                  io_sti:     ; void io_sti(void)
    27 00000004 FB                          STI
    28 00000005 C3                          RET
    29                                  
    30                                  io_stihlt:  ; void io_stihlt(void)
    31 00000006 FB                          STI
    32 00000007 F4                          HLT
    33 00000008 C3                          RET
    34                                  
    35                                  io_in8:     ;int io_in8(int port)
    36 00000009 8B542404                    MOV     EDX,[ESP+4]     ; port
    37 0000000D B800000000                  MOV     EAX,0
    38 00000012 EC                          IN      AL,DX
    39 00000013 C3                          RET
    40                                  
    41                                  io_in16:     ;int io_in16(int port)
    42 00000014 8B542404                    MOV     EDX,[ESP+4]     ; port
    43 00000018 B800000000                  MOV     EAX,0
    44 0000001D 66ED                        IN      AX,DX
    45 0000001F C3                          RET
    46                                  
    47                                  io_in32:     ;int io_in32(int port)
    48 00000020 8B542404                    MOV     EDX,[ESP+4]     ; port
    49 00000024 ED                          IN      EAX,DX
    50 00000025 C3                          RET
    51                                  
    52                                  io_out8:     ;int io_out8(int port, int data)
    53 00000026 8B542404                    MOV     EDX,[ESP+4]     ; port
    54 0000002A 8A442408                    MOV     AL,[ESP+8]      ; data
    55 0000002E EE                          OUT     DX,AL
    56 0000002F C3                          RET
    57                                  
    58                                  io_out16:     ;int io_out16(int port, int data)
    59 00000030 8B542404                    MOV     EDX,[ESP+4]     ; port
    60 00000034 8B442408                    MOV     EAX,[ESP+8]      ; data
    61 00000038 66EF                        OUT     DX,AX
    62 0000003A C3                          RET
    63                                  
    64                                  io_out32:     ;int io_out32(int port, int data)
    65 0000003B 8B542404                    MOV     EDX,[ESP+4]     ; port
    66 0000003F 8B442408                    MOV     EAX,[ESP+8]      ; data
    67 00000043 EF                          OUT     DX,EAX
    68 00000044 C3                          RET
    69                                  
    70                                  io_load_eflags: ; int io_load_eflags(void)
    71 00000045 9C                          PUSHFD
    72 00000046 58                          POP     EAX
    73 00000047 C3                          RET
    74                                  
    75                                  io_store_eflags: ; int io_store_eflags(int eflags)
    76 00000048 8B442404                    MOV     EAX,[ESP+4]
    77 0000004C 50                          PUSH    EAX
    78 0000004D 9D                          POPFD
    79 0000004E C3                          RET
    80                                  
    81                                  load_gdtr:  ; void load_gdtr(int limit, int addr);
    82 0000004F 668B442404                  MOV     AX,[ESP+4]
    83 00000054 6689442406                  MOV     [ESP+6],AX
    84 00000059 0F01542406                  LGDT    [ESP+6]
    85 0000005E C3                          RET
    86                                  
    87                                  load_idtr:  ; void load_idtr(int limit, int addr);
    88 0000005F 668B442404                  MOV     AX,[ESP+4]
    89 00000064 6689442406                  MOV     [ESP+6],AX
    90 00000069 0F015C2406                  LIDT    [ESP+6]
    91 0000006E C3                          RET
    92                                  
    93                                  asm_inthandler21:
    94 0000006F 06                          PUSH    ES
    95 00000070 1E                          PUSH    DS
    96 00000071 60                          PUSHAD
    97 00000072 89E0                        MOV     EAX,ESP
    98 00000074 50                          PUSH    EAX
    99 00000075 668CD0                      MOV     AX,SS
   100 00000078 8ED8                        MOV     DS,AX
   101 0000007A 8EC0                        MOV     ES,AX
   102 0000007C E8(00000000)                CALL    inthandler21
   103 00000081 58                          POP     EAX
   104 00000082 61                          POPAD
   105 00000083 1F                          POP     DS
   106 00000084 07                          POP     ES
   107 00000085 CF                          IRETD
   108                                  
   109                                  asm_inthandler27:
   110 00000086 06                          PUSH    ES
   111 00000087 1E                          PUSH    DS
   112 00000088 60                          PUSHAD
   113 00000089 89E0                        MOV     EAX,ESP
   114 0000008B 50                          PUSH    EAX
   115 0000008C 668CD0                      MOV     AX,SS
   116 0000008F 8ED8                        MOV     DS,AX
   117 00000091 8EC0                        MOV     ES,AX
   118 00000093 E8(00000000)                CALL    inthandler27
   119 00000098 58                          POP     EAX
   120 00000099 61                          POPAD
   121 0000009A 1F                          POP     DS
   122 0000009B 07                          POP     ES
   123 0000009C CF                          IRETD    
   124                                      
   125                                  asm_inthandler2c:
   126 0000009D 06                          PUSH    ES
   127 0000009E 1E                          PUSH    DS
   128 0000009F 60                          PUSHAD
   129 000000A0 89E0                        MOV     EAX,ESP
   130 000000A2 50                          PUSH    EAX
   131 000000A3 668CD0                      MOV     AX,SS
   132 000000A6 8ED8                        MOV     DS,AX
   133 000000A8 8EC0                        MOV     ES,AX
   134 000000AA E8(00000000)                CALL    inthandler2c
   135 000000AF 58                          POP     EAX
   136 000000B0 61                          POPAD
   137 000000B1 1F                          POP     DS
   138 000000B2 07                          POP     ES
   139 000000B3 CF                          IRETD    
   140                                  
   141                                  asm_inthandler20: ;PIT(タイマー割り込み))
   142 000000B4 06                          PUSH    ES
   143 000000B5 1E                          PUSH    DS
   144 000000B6 60                          PUSHAD
   145 000000B7 89E0                        MOV     EAX,ESP
   146 000000B9 50                          PUSH    EAX
   147 000000BA 668CD0                      MOV     AX,SS
   148 000000BD 8ED8                        MOV     DS,AX
   149 000000BF 8EC0                        MOV     ES,AX
   150 000000C1 E8(00000000)                CALL    inthandler20
   151 000000C6 58                          POP     EAX
   152 000000C7 61                          POPAD
   153 000000C8 1F                          POP     DS
   154 000000C9 07                          POP     ES
   155 000000CA CF                          IRETD    
   156                                  
   157                                  load_cr0:   ;int load_cr0(void);
   158 000000CB 0F20C0                      MOV     EAX,CR0
   159 000000CE C3                          RET
   160                                  
   161                                  store_cr0:   ;void store(int cr0);
   162 000000CF 8B442404                    MOV     EAX,[ESP+4]
   163 000000D3 0F22C0                      MOV     CR0,EAX
   164 000000D6 C3                          RET
   165                                  
   166                                  load_tr:    ;void load_tr(int tr);
   167 000000D7 0F005C2404                  LTR     [ESP+4]
   168 000000DC C3                          RET
   169                                  
   170                                  taskswitch4:;void taskswitch4(void);
   171 000000DD EA000000002000              JMP     4*8:0
   172 000000E4 C3                          RET
   173                                  
   174                                  memtest_sub: ;unsigned int memtest_sub(unsigned int start, unsigned int end);
   175 000000E5 57                          PUSH    EDI
   176 000000E6 56                          PUSH    ESI
   177 000000E7 53                          PUSH    EBX
   178 000000E8 BE55AA55AA                  MOV     ESI,0xaa55aa55
   179 000000ED BFAA55AA55                  MOV     EDI,0x55aa55aa
   180 000000F2 8B442410                    MOV     EAX,[ESP+12+4]
   181                                  mts_loop:
   182 000000F6 89C3                        MOV     EBX,EAX
   183 000000F8 81C3FC0F0000                ADD     EBX,0xffc
   184 000000FE 8B13                        MOV     EDX,[EBX]
   185 00000100 8933                        MOV     [EBX],ESI
   186 00000102 8333FF                      XOR     DWORD [EBX],0xffffffff
   187 00000105 3B3B                        CMP     EDI,[EBX]
   188 00000107 7511                        JNE     mts_fin
   189 00000109 8913                        MOV     [EBX],EDX
   190 0000010B 0500100000                  ADD     EAX,0x1000
   191 00000110 3B442414                    CMP     EAX,[ESP+12+8]
   192 00000114 76E0                        JBE     mts_loop
   193 00000116 5B                          POP     EBX
   194 00000117 5E                          POP     ESI
   195 00000118 5F                          POP     EDI
   196 00000119 C3                          RET
   197                                  mts_fin:
   198 0000011A 8913                        MOV     [EBX],EDX
   199 0000011C 5B                          POP     EBX
   200 0000011D 5E                          POP     ESI
   201 0000011E 5F                          POP     EDI
   202 0000011F C3                          RET
